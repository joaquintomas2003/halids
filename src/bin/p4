#!/usr/bin/env bash

set -e

COMMAND=$1
shift

CWD="$(pwd)"  # Current directory where the command is run

FIRMWARE_PATH="$CWD/out/firmware.nffw"
PIF_JSON_PATH="$CWD/pifout/pif_design.json"

case "$COMMAND" in
  build)
    if [ -z "$1" ]; then
      echo "❌ Please specify the .p4 file to compile."
      echo "Usage: bin/p4 build path/to/your_file.p4"
      exit 1
    fi

    P4_FILE="$1"

    if [ ! -f "$P4_FILE" ]; then
      echo "❌ File not found: $P4_FILE"
      exit 1
    fi

    echo "Compiling $P4_FILE${C_FILE:+ with $C_FILE}..."
    /opt/netronome/p4/bin/nfp4build \
      --nfp4c_p4_version 16 \
      --no-debug-info \
      -p pifout \
      -o "$FIRMWARE_PATH" \
      -l lithium \
      --shared-codestore \
      -4 "$P4_FILE" \
      --nfirc_mac_ingress_timestamp
    echo "✅ Compilation complete: $FIRMWARE_PATH"
    ;;

  buildc)
    if [ -z "$1" ]; then
      echo "❌ Please specify the .p4 file to compile."
      echo "Usage: bin/p4 build path/to/your_file.p4"
      exit 1
    fi

    P4_FILE="$1"

    if [ ! -f "$P4_FILE" ]; then
      echo "❌ File not found: $P4_FILE"
      exit 1
    fi

    echo "Compiling $P4_FILE${C_FILE:+ with $C_FILE}..."
    /opt/netronome/p4/bin/nfp4build \
      --nfp4c_p4_version 16 \
      --no-debug-info \
      -p pifout \
      -o "$FIRMWARE_PATH" \
      -l lithium \
      --shared-codestore \
      -4 "$P4_FILE" \
      $C_FLAG \
      -c main.c
    echo "✅ Compilation complete: $FIRMWARE_PATH"
    ;;

  design-load)
    echo "Loading firmware from $FIRMWARE_PATH..."
    /opt/netronome/p4/bin/rtecli design-load -f "$FIRMWARE_PATH" -p "$PIF_JSON_PATH"
    echo "✅ Firmware loaded"
    ;;

  config-load)
    if [ -z "$1" ]; then
      echo "❌ Please specify the config file to load."
      exit 1
    fi

    CONFIG_FILE="$1"

    if [ ! -f "$CONFIG_FILE" ]; then
      echo "❌ File not found: $CONFIG_FILE"
      exit 1
    fi
    echo "Reloading configuration from $CONFIG_FILE..."
    /opt/netronome/p4/bin/rtecli config-reload -c "$CONFIG_FILE"
    echo "✅ Configuration reloaded"
    ;;

  list-tables)
    /opt/netronome/p4/bin/rtecli tables list
    ;;

  list-table)
    if [ -z "$1" ]; then
      echo "❌ Please specify the id of the table"
      exit 1
    fi

    TABLE_ID="$1"

    /opt/netronome/p4/bin/rtecli tables list-rules -i "$TABLE_ID"
    ;;

  rtecli)
    echo "Running rtecli with arguments: $@"
    /opt/netronome/p4/bin/rtecli "$@"
    ;;

  nfp4build)
    echo "Running nfp4build with arguments: $@"
    /opt/netronome/p4/bin/nfp4build "$@"
    ;;

  help|--help|-h|"")
    echo "Usage: bin/p4 [command] [options]"
    echo ""
    echo "Commands:"
    echo "  build <file.p4>                        Compile the given P4 program (output in ./out/)"
    echo "  buildc <file.p4>                       Compile the given P4 program with main.c (output in ./out/)"
    echo "  design-load                            Load compiled firmware from ./out/"
    echo "  config-load <config file>              Reload config from <config file>"
    echo "  list-tables                            Show all the tables"
    echo "  list-table <table id>                  Show the given table"
    echo "  nfp4build **                           nfp4build passthrough command"
    echo "  rtecli **                              rtecli passthrough command"
    echo "  help                                   Show this help message"
    ;;

  *)
    echo "❌ Unknown command: $COMMAND"
    echo "Use 'bin/p4 help' to see available commands."
    exit 1
    ;;
esac
